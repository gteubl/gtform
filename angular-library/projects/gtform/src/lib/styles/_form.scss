@import "variables";

// Define breakpoints for responsiveness
$breakpoints: (
        sm: 36em, // 576px assuming a base font size of 16px
        md: 48em, // 768px
        lg: 62em, // 992px
);

// Function to generate media queries
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}.";
  }
}

// Generate column classes
@for $i from 1 through 12 {
  .gtform-col-#{$i} {
    flex: 0 0 calc((100% / 12) * #{$i});
    max-width: calc((100% / 12) * #{$i});
  }
}

// Responsive column classes
@each $breakpoint, $breakpoint-width in $breakpoints {
  @include respond-to($breakpoint) {
    @for $i from 1 through 12 {
      .gtform-col-#{$breakpoint}-#{$i} {
        flex: 0 0 calc((100% / 12) * #{$i});
        max-width: calc((100% / 12) * #{$i});
      }
    }
  }
}

.gtform-container {
  .gtform-row {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5em 1em; // vertical gap, horizontal gap
    margin-bottom: 0.5em;

    // Ensure no margins or paddings are applied that could break the layout
    > [class*='gtform-col-'] {
      flex: 1 1 auto;
      margin-bottom: 0.5em;
    }
  }
}


.gtform-container {
  padding: 0.3em;
  margin: 0 auto;
}

.gtform-row {
  display: flex;
  flex-wrap: wrap;
}

.gtform-group {
  align-self: flex-end;
}

.vertical-divider {
  height: 100%;
  width: 1px;
  background-color: var(--form-border-color);
  margin-left: 0.5em
}

.gtform-row-center {
  display: flex;
  flex-direction: row;
  align-items: center;
  width: 100%;
}

.horizontal-divider {
  width: 100%;
  height: 1px;
  background-color: var(--form-border-color);
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.alternate-color {
  background-color: var(--form-alternate-color);
}

.alternate-color:nth-child(even) {
  background-color: whitesmoke;
}
